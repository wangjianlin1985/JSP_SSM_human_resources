<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.YgflMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加员工福利记录 -->
	<insert id="addYgfl" parameterType="ygfl">
		insert into t_ygfl(year,employeeObj,fljj,sfff,ffrq) values 
		(#{year},#{employeeObj.employeeNo},#{fljj},#{sfff},#{ffrq})
	</insert>

	<!-- 按照查询条件分页查询员工福利记录 -->
	<select id="queryYgfl" resultMap="ygflMap" >
		select t_ygfl.* from t_ygfl,t_employee ${where} and t_ygfl.employeeObj = t_employee.employeeNo limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="ygflMap" type="ygfl">
        <id property="flId" column="flId" />
        <association property="employeeObj" column="employeeObj" select="com.chengxusheji.mapper.EmployeeMapper.getEmployee" />
    </resultMap>

    <!-- 按照查询条件查询所有员工福利记录 -->
	<select id="queryYgflList" resultMap="ygflMap" >
		select t_ygfl.* from t_ygfl,t_employee ${where} and t_ygfl.employeeObj = t_employee.employeeNo
	</select>

    <!-- 按照查询条件的员工福利记录数 -->
	<select id="queryYgflCount" resultType="int">
		select count(*) from t_ygfl,t_employee ${where} and t_ygfl.employeeObj = t_employee.employeeNo
	</select>

	<!-- 根据主键查询某个员工福利记录 -->
	<select id="getYgfl" parameterType="int" resultMap="ygflMap">
		select * from t_ygfl where t_ygfl.flId = #{flId}
	</select>

	<!-- 更新员工福利记录 -->
	<update id="updateYgfl" parameterType="ygfl">
		update t_ygfl set year=#{year},employeeObj=#{employeeObj.employeeNo},fljj=#{fljj},sfff=#{sfff},ffrq=#{ffrq} where flId = #{flId}
	</update>

	<!-- 删除员工福利记录 -->
	<delete id="deleteYgfl" parameterType="int">
		delete from t_ygfl where flId=#{flId}
	</delete>

</mapper>
